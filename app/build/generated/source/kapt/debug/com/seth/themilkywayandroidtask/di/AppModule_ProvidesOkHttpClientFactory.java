// Generated by Dagger (https://dagger.dev).
package com.seth.themilkywayandroidtask.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<Cache> cacheProvider;

  public AppModule_ProvidesOkHttpClientFactory(Provider<Cache> cacheProvider) {
    this.cacheProvider = cacheProvider;
  }

  @Override
  public OkHttpClient get() {
    return providesOkHttpClient(cacheProvider.get());
  }

  public static AppModule_ProvidesOkHttpClientFactory create(Provider<Cache> cacheProvider) {
    return new AppModule_ProvidesOkHttpClientFactory(cacheProvider);
  }

  public static OkHttpClient providesOkHttpClient(Cache cache) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesOkHttpClient(cache));
  }
}
