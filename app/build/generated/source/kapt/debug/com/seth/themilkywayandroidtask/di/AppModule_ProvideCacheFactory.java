// Generated by Dagger (https://dagger.dev).
package com.seth.themilkywayandroidtask.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCacheFactory implements Factory<Cache> {
  private final Provider<Context> appContextProvider;

  public AppModule_ProvideCacheFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public Cache get() {
    return provideCache(appContextProvider.get());
  }

  public static AppModule_ProvideCacheFactory create(Provider<Context> appContextProvider) {
    return new AppModule_ProvideCacheFactory(appContextProvider);
  }

  public static Cache provideCache(Context appContext) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCache(appContext));
  }
}
